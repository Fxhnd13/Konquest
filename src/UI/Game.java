/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BackEnd.Objects.Map;
import BackEnd.Objects.Planet;
import BackEnd.Objects.Player;
import BackEnd.Utilities.Utilities;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jose_
 */
public class Game extends javax.swing.JFrame {

    GameManager gameManager = new GameManager();
    UIManager uiManager = new UIManager();
    
    /**
     * Creates new form Game
     */
    public Game() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GameConfigurationP = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        GameConfigurationPNamePlayer = new javax.swing.JTextField();
        GameConfigurationPTypePlayer = new javax.swing.JComboBox<>();
        AddPlayerButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        GameConfigurationPColorPlayer = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        GameConfigurationPTablePlayers = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        AddPlanetButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        GameConfigurationPTablePlanets = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        GameConfigurationPNamePlanet = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        GameConfigurationPDeathless = new javax.swing.JFormattedTextField();
        GameConfigurationPProduction = new javax.swing.JFormattedTextField();
        GameConfigurationPShips = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        GameConfigurationPConquers = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        GameConfigurationPNameMap = new javax.swing.JTextField();
        GameConfigurationPRowMap = new javax.swing.JFormattedTextField();
        GameConfigurationPColumnMap = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        GameConfigurationPBlindMap = new javax.swing.JCheckBox();
        GameConfigurationPAcum = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        GameConfigurationPShowShips = new javax.swing.JCheckBox();
        GameConfigurationPShowStadistics = new javax.swing.JCheckBox();
        jLabel29 = new javax.swing.JLabel();
        GameConfigurationPFinalization = new javax.swing.JFormattedTextField();
        PersonalizedPlayButton = new javax.swing.JButton();
        GameConfigurationA = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        GameConfigurationANamePlayer = new javax.swing.JTextField();
        GameConfigurationATypePlayer = new javax.swing.JComboBox<>();
        AddPlayerAButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        GameConfigurationAColorPlayer = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        GameConfigurationATablePlayers = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        GameConfigurationANameMap = new javax.swing.JTextField();
        GameConfigurationARowMap = new javax.swing.JFormattedTextField();
        GameConfigurationAColumnMap = new javax.swing.JFormattedTextField();
        jPanel9 = new javax.swing.JPanel();
        GameConfigurationABlindMap = new javax.swing.JCheckBox();
        GameConfigurationAAcum = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        GameConfigurationAShowShips = new javax.swing.JCheckBox();
        GameConfigurationAShowStadistics = new javax.swing.JCheckBox();
        jLabel27 = new javax.swing.JLabel();
        GameConfigurationAAmount = new javax.swing.JFormattedTextField();
        GameConfigurationAFinalization = new javax.swing.JFormattedTextField();
        jLabel28 = new javax.swing.JLabel();
        PlayAButton = new javax.swing.JButton();
        GameResults = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        GameResultTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        InformationPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NamePlayerInTurn = new javax.swing.JLabel();
        AtackButton = new javax.swing.JButton();
        EndTurnButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        StateLabel = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        TurnLabel = new javax.swing.JLabel();
        SpacePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Bitacora = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        BotonJuegoAlAzar = new javax.swing.JMenuItem();
        BotonJuegoPersonalizado = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        GameConfigurationP.setTitle("Configuracion Juego Personalizado");
        GameConfigurationP.setSize(new java.awt.Dimension(1240, 490));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Jugadores"));

        jLabel3.setText("Nombre: ");

        jLabel4.setText("Tipo: ");

        GameConfigurationPTypePlayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Humano", "Facil", "Dificil" }));

        AddPlayerButton.setText("Agregar Jugador");
        AddPlayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPlayerButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Color: ");

        GameConfigurationPColorPlayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir un color", "Rojo", "Azul", "Verde", "Amarillo", "Naranja", "Blanco" }));

        GameConfigurationPTablePlayers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Color"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(GameConfigurationPTablePlayers);
        if (GameConfigurationPTablePlayers.getColumnModel().getColumnCount() > 0) {
            GameConfigurationPTablePlayers.getColumnModel().getColumn(0).setResizable(false);
            GameConfigurationPTablePlayers.getColumnModel().getColumn(1).setResizable(false);
            GameConfigurationPTablePlayers.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton7.setText("Elimianr Jugador");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GameConfigurationPColorPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GameConfigurationPTypePlayer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GameConfigurationPNamePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddPlayerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(GameConfigurationPNamePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(GameConfigurationPTypePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(GameConfigurationPColorPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddPlayerButton)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Planetas"));

        AddPlanetButton.setText("Agregar Planeta");
        AddPlanetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPlanetButtonActionPerformed(evt);
            }
        });

        GameConfigurationPTablePlanets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Naves", "Produccion", "Porcentaje Muerte", "Conquistador"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(GameConfigurationPTablePlanets);
        if (GameConfigurationPTablePlanets.getColumnModel().getColumnCount() > 0) {
            GameConfigurationPTablePlanets.getColumnModel().getColumn(0).setResizable(false);
            GameConfigurationPTablePlanets.getColumnModel().getColumn(1).setResizable(false);
            GameConfigurationPTablePlanets.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel11.setText("Nombre: ");

        jLabel12.setText("Naves:");

        jLabel13.setText("Produccion:");

        jLabel14.setText("Porcentaje de muertes:");

        jLabel15.setText("Conquistado Por:");

        GameConfigurationPConquers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nadie" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GameConfigurationPDeathless, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(AddPlanetButton)
                                .addGap(185, 185, 185)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GameConfigurationPNamePlanet, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GameConfigurationPShips, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GameConfigurationPProduction, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GameConfigurationPConquers, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(GameConfigurationPNamePlanet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(GameConfigurationPShips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(GameConfigurationPProduction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GameConfigurationPConquers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(GameConfigurationPDeathless, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(AddPlanetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Mapa"));

        jLabel7.setText("Nombre*: ");

        jLabel8.setText("Filas*:");

        jLabel9.setText("Columnas*:");

        GameConfigurationPRowMap.setText(" ");

        GameConfigurationPColumnMap.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(GameConfigurationPRowMap, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameConfigurationPColumnMap, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameConfigurationPNameMap, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addGap(64, 64, 64))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7))
                    .addComponent(GameConfigurationPNameMap, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(GameConfigurationPRowMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(GameConfigurationPColumnMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones Generales"));

        GameConfigurationPBlindMap.setText("Mapa Ciego");

        GameConfigurationPAcum.setText("Acumular");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Planetas Neutrales"));

        GameConfigurationPShowShips.setText("Mostrar Naves");

        GameConfigurationPShowStadistics.setText("Mostrar Estadisticas");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameConfigurationPShowShips)
                    .addComponent(GameConfigurationPShowStadistics))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GameConfigurationPShowShips)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GameConfigurationPShowStadistics)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jLabel29.setText("Finalizacion: ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameConfigurationPBlindMap)
                    .addComponent(GameConfigurationPAcum)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GameConfigurationPFinalization, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GameConfigurationPBlindMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GameConfigurationPAcum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(GameConfigurationPFinalization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        PersonalizedPlayButton.setText("¡Jugar!");
        PersonalizedPlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PersonalizedPlayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GameConfigurationPLayout = new javax.swing.GroupLayout(GameConfigurationP.getContentPane());
        GameConfigurationP.getContentPane().setLayout(GameConfigurationPLayout);
        GameConfigurationPLayout.setHorizontalGroup(
            GameConfigurationPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameConfigurationPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GameConfigurationPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GameConfigurationPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PersonalizedPlayButton)
                .addGap(544, 544, 544))
        );
        GameConfigurationPLayout.setVerticalGroup(
            GameConfigurationPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameConfigurationPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GameConfigurationPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GameConfigurationPLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PersonalizedPlayButton)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        GameConfigurationA.setTitle("Configuracion Juego Al Azar");
        GameConfigurationA.setBackground(new java.awt.Color(204, 204, 204));
        GameConfigurationA.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        GameConfigurationA.setResizable(false);
        GameConfigurationA.setSize(new java.awt.Dimension(690, 470));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Jugadores"));

        jLabel6.setText("Nombre: ");

        jLabel16.setText("Tipo: ");

        GameConfigurationATypePlayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Humano", "Facil", "Dificil" }));

        AddPlayerAButton.setText("Agregar Jugador");
        AddPlayerAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPlayerAButtonActionPerformed(evt);
            }
        });

        jLabel17.setText("Color: ");

        GameConfigurationAColorPlayer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elegir un color", "Rojo", "Azul", "Verde", "Amarillo", "Naranja", "Blanco" }));

        GameConfigurationATablePlayers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo", "Color"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(GameConfigurationATablePlayers);
        if (GameConfigurationATablePlayers.getColumnModel().getColumnCount() > 0) {
            GameConfigurationATablePlayers.getColumnModel().getColumn(0).setResizable(false);
            GameConfigurationATablePlayers.getColumnModel().getColumn(1).setResizable(false);
            GameConfigurationATablePlayers.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton5.setText("Eliminar Jugador");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(GameConfigurationATypePlayer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(GameConfigurationANamePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(GameConfigurationAColorPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(AddPlayerAButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(30, 30, 30))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(GameConfigurationANamePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(GameConfigurationATypePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(GameConfigurationAColorPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddPlayerAButton)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Mapa"));

        jLabel23.setText("Nombre*: ");

        jLabel24.setText("Filas*:");

        jLabel25.setText("Columnas*:");

        GameConfigurationANameMap.setPreferredSize(new java.awt.Dimension(20, 24));

        GameConfigurationARowMap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        GameConfigurationAColumnMap.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GameConfigurationANameMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GameConfigurationARowMap)
                    .addComponent(GameConfigurationAColumnMap, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(GameConfigurationANameMap, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(GameConfigurationARowMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(GameConfigurationAColumnMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones Generales"));

        GameConfigurationABlindMap.setText("Mapa Ciego");

        GameConfigurationAAcum.setText("Acumular");

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Planetas Neutrales"));

        GameConfigurationAShowShips.setText("Mostrar Naves");

        GameConfigurationAShowStadistics.setText("Mostrar Estadisticas");

        jLabel27.setText("Cantidad*: ");

        GameConfigurationAAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameConfigurationAShowShips)
                    .addComponent(GameConfigurationAShowStadistics)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GameConfigurationAAmount)))
                .addGap(7, 7, 7))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GameConfigurationAShowShips)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GameConfigurationAShowStadistics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(GameConfigurationAAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GameConfigurationAFinalization.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel28.setText("Finalizacion: ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GameConfigurationAFinalization, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GameConfigurationABlindMap)
                            .addComponent(GameConfigurationAAcum))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GameConfigurationABlindMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GameConfigurationAAcum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(GameConfigurationAFinalization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        PlayAButton.setText("¡Jugar!");
        PlayAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayAButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GameConfigurationALayout = new javax.swing.GroupLayout(GameConfigurationA.getContentPane());
        GameConfigurationA.getContentPane().setLayout(GameConfigurationALayout);
        GameConfigurationALayout.setHorizontalGroup(
            GameConfigurationALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameConfigurationALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GameConfigurationALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PlayAButton)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(GameConfigurationALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        GameConfigurationALayout.setVerticalGroup(
            GameConfigurationALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameConfigurationALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GameConfigurationALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(GameConfigurationALayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayAButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GameResults.setSize(new java.awt.Dimension(800, 320));

        GameResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Jugador", "Planetas Conquistados", "Naves Creadas", "Naves Eliminadas", "Ataques Realizados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(GameResultTable);

        jButton1.setText("Terminar Partida");

        jButton3.setText("Guardar Repeticion");

        javax.swing.GroupLayout GameResultsLayout = new javax.swing.GroupLayout(GameResults.getContentPane());
        GameResults.getContentPane().setLayout(GameResultsLayout);
        GameResultsLayout.setHorizontalGroup(
            GameResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
            .addGroup(GameResultsLayout.createSequentialGroup()
                .addContainerGap(199, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(155, 155, 155)
                .addComponent(jButton3)
                .addGap(181, 181, 181))
        );
        GameResultsLayout.setVerticalGroup(
            GameResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(GameResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InformationPanel.setBackground(new java.awt.Color(0, 0, 0));
        InformationPanel.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Turno de: ");

        NamePlayerInTurn.setForeground(new java.awt.Color(153, 102, 0));

        AtackButton.setBackground(new java.awt.Color(102, 102, 102));
        AtackButton.setForeground(new java.awt.Color(204, 204, 204));
        AtackButton.setText("Hacer Ataque");
        AtackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtackButtonActionPerformed(evt);
            }
        });

        EndTurnButton.setBackground(new java.awt.Color(102, 102, 102));
        EndTurnButton.setForeground(new java.awt.Color(204, 204, 204));
        EndTurnButton.setText("Terminar Turno");
        EndTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndTurnButtonActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Estado:");

        StateLabel.setForeground(new java.awt.Color(153, 102, 0));
        StateLabel.setText("Planeando...");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Turno:");

        TurnLabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout InformationPanelLayout = new javax.swing.GroupLayout(InformationPanel);
        InformationPanel.setLayout(InformationPanelLayout);
        InformationPanelLayout.setHorizontalGroup(
            InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InformationPanelLayout.createSequentialGroup()
                        .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(InformationPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NamePlayerInTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InformationPanelLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(StateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                        .addComponent(AtackButton)
                        .addGap(18, 18, 18)
                        .addComponent(EndTurnButton)
                        .addGap(576, 576, 576))
                    .addGroup(InformationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(TurnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        InformationPanelLayout.setVerticalGroup(
            InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InformationPanelLayout.createSequentialGroup()
                        .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(NamePlayerInTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel19)
                            .addComponent(StateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AtackButton)
                        .addComponent(EndTurnButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TurnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        SpacePanel.setBackground(new java.awt.Color(0, 0, 0));
        SpacePanel.setLayout(new java.awt.GridLayout(1, 0));

        Bitacora.setBackground(new java.awt.Color(0, 0, 0));
        Bitacora.setColumns(20);
        Bitacora.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Bitacora.setForeground(new java.awt.Color(255, 255, 255));
        Bitacora.setRows(5);
        Bitacora.setSelectedTextColor(new java.awt.Color(153, 102, 0));
        Bitacora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BitacoraMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(Bitacora);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/fondo.jpg"))); // NOI18N

        jMenu1.setText("Juego");

        BotonJuegoAlAzar.setText("Juego al Azar");
        BotonJuegoAlAzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonJuegoAlAzarActionPerformed(evt);
            }
        });
        jMenu1.add(BotonJuegoAlAzar);

        BotonJuegoPersonalizado.setText("Juego personalizado");
        BotonJuegoPersonalizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonJuegoPersonalizadoActionPerformed(evt);
            }
        });
        jMenu1.add(BotonJuegoPersonalizado);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Opciones");

        jMenuItem1.setText("Medir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Ver Ataques Realizados");
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Ver Flotas En El Espacio");
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Acerca de...");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(SpacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(595, 595, 595))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 1929, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(InformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SpacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 6, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BitacoraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BitacoraMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_BitacoraMouseEntered

    private void BotonJuegoAlAzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonJuegoAlAzarActionPerformed
        uiManager.cleanLabel(GameConfigurationANamePlayer);
        uiManager.cleanLabel(GameConfigurationANameMap);
        uiManager.cleanLabel(GameConfigurationARowMap);
        uiManager.cleanLabel(GameConfigurationAColumnMap);
        uiManager.cleanLabel(GameConfigurationAFinalization);
        uiManager.cleanLabel(GameConfigurationAAmount);
        uiManager.cleanTable(GameConfigurationATablePlayers);
        this.AtackButton.setEnabled(true);
        this.EndTurnButton.setEnabled(true);
        GameConfigurationAAcum.setSelected(false);
        GameConfigurationABlindMap.setSelected(false);
        GameConfigurationAShowShips.setSelected(false);
        GameConfigurationAShowStadistics.setSelected(false);
        GameConfigurationA.setVisible(true);
    }//GEN-LAST:event_BotonJuegoAlAzarActionPerformed

    private void PlayAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayAButtonActionPerformed
        if((Integer.parseInt(GameConfigurationAAmount.getText().trim())+GameConfigurationATablePlayers.getRowCount())>
                              Integer.parseInt(GameConfigurationARowMap.getText().trim())*Integer.parseInt(GameConfigurationAColumnMap.getText().trim())){
            JOptionPane.showMessageDialog(null, "No puede haber más planetas que espacios en el mapa.", "Error.", JOptionPane.ERROR_MESSAGE);
        }else{
            gameManager.reset(SpacePanel, Bitacora);
            TurnLabel.setText("1");
            gameManager.doPlayers(GameConfigurationATablePlayers);
            gameManager.doPlanets(Integer.parseInt(GameConfigurationAAmount.getText().trim()),
                                  Integer.parseInt(GameConfigurationARowMap.getText().trim()),
                                  Integer.parseInt(GameConfigurationAColumnMap.getText().trim()));
            Map map = new Map(GameConfigurationANameMap.getText().trim(),
                              GameConfigurationARowMap.getText().trim(),
                              GameConfigurationAColumnMap.getText().trim(),
                              GameConfigurationABlindMap,
                              GameConfigurationAAcum,
                              GameConfigurationAFinalization.getText().trim(),
                              GameConfigurationAShowShips,
                              GameConfigurationAShowStadistics);
            if(GameConfigurationAAmount.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Debe Ingresar la cantidad de planetas neutrales que desea que existan. ");
            }else{
                map.setPlanetasNeutrales(Integer.parseInt(GameConfigurationAAmount.getText().trim()));
                if(map.isValid()){
                    SpacePanel.setLayout(new GridLayout(map.getFilas(), map.getColumnas()));
                    doCells(map, SpacePanel, gameManager.getPlanets());
                    SpacePanel.validate();
                    SpacePanel.repaint();
                    GameConfigurationA.setVisible(false);
                    gameManager.getConfiguration().setMap(map);
                    gameManager.setAlAzar(true);
                }
            }
        }
    }//GEN-LAST:event_PlayAButtonActionPerformed

    private void AddPlayerAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPlayerAButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) GameConfigurationATablePlayers.getModel();
        Player player = new Player(GameConfigurationANamePlayer.getText(),
                                   GameConfigurationAColorPlayer.getSelectedItem().toString(),
                                   GameConfigurationATypePlayer.getSelectedItem().toString());
        if(player.getName().isEmpty()||GameConfigurationAColorPlayer.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "No ingresó un nombre o un color valido.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            if(Utilities.existPlayer(player,GameConfigurationAColorPlayer.getSelectedIndex(), model)){
                JOptionPane.showMessageDialog(null,"Ya existe un jugador con el nombre o el color seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                model.addRow(new String[]{player.getName(),player.getType(), player.getColorPlayer()}); 
                GameConfigurationANamePlayer.setText("");
                GameConfigurationAColorPlayer.setSelectedIndex(0);
                GameConfigurationATypePlayer.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_AddPlayerAButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void AddPlayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPlayerButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) GameConfigurationPTablePlayers.getModel();
        Player player = new Player(GameConfigurationPNamePlayer.getText(),
                                   GameConfigurationPColorPlayer.getSelectedItem().toString(),
                                   GameConfigurationPTypePlayer.getSelectedItem().toString());
        if(player.getName().isEmpty()||GameConfigurationPColorPlayer.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "No ingresó un nombre o un color valido.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            if(Utilities.existPlayer(player,GameConfigurationPColorPlayer.getSelectedIndex(), model)){
                JOptionPane.showMessageDialog(null,"Ya existe un jugador con el nombre o el color seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                model.addRow(new String[]{player.getName(),player.getType(), player.getColorPlayer()});
                GameConfigurationPConquers.addItem(player.getName());
                GameConfigurationPNamePlayer.setText("");
                GameConfigurationPColorPlayer.setSelectedIndex(0);
                GameConfigurationPTypePlayer.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_AddPlayerButtonActionPerformed

    private void BotonJuegoPersonalizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonJuegoPersonalizadoActionPerformed
        uiManager.cleanLabel(GameConfigurationPNameMap);
        uiManager.cleanLabel(GameConfigurationPRowMap);
        uiManager.cleanLabel(GameConfigurationPColumnMap);
        uiManager.cleanLabel(GameConfigurationPFinalization);
        uiManager.cleanLabel(GameConfigurationPNamePlanet);
        uiManager.cleanLabel(GameConfigurationPShips);
        uiManager.cleanLabel(GameConfigurationPProduction);
        uiManager.cleanLabel(GameConfigurationPDeathless);
        GameConfigurationPTypePlayer.setSelectedIndex(0);
        GameConfigurationPColorPlayer.setSelectedIndex(0);
        this.AtackButton.setEnabled(true);
        this.EndTurnButton.setEnabled(true);
        GameConfigurationPAcum.setSelected(false);
        GameConfigurationPBlindMap.setSelected(false);
        GameConfigurationPShowShips.setSelected(false);
        GameConfigurationPShowStadistics.setSelected(false);
        uiManager.cleanTable(GameConfigurationPTablePlanets);
        uiManager.cleanTable(GameConfigurationPTablePlayers);
        GameConfigurationP.setVisible(true);
    }//GEN-LAST:event_BotonJuegoPersonalizadoActionPerformed

    private void AddPlanetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPlanetButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) GameConfigurationPTablePlanets.getModel();
        Planet planet = new Planet(GameConfigurationPNamePlanet.getText(),
                                   GameConfigurationPShips.getText().trim(),
                                   GameConfigurationPProduction.getText().trim(),
                                   GameConfigurationPDeathless.getText().trim(),
                                   GameConfigurationPConquers.getSelectedItem().toString());
        if(GameConfigurationPNamePlanet.getText().isEmpty()||
                GameConfigurationPShips.getText().isEmpty()||
                GameConfigurationPProduction.getText().isEmpty()||
                GameConfigurationPDeathless.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "No ingresó todos los valores necesarios para crear un planeta.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            if(Utilities.existPlanet(planet, model)){
                JOptionPane.showMessageDialog(null,"Ya existe un planeta con ese nombre.", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                if(planet.getDeathPercentage()>1){
                    JOptionPane.showMessageDialog(null,"El porcentaje de muerte debe ser un valor entre 0 y 1", "Error", JOptionPane.ERROR_MESSAGE);
                }else{
                    model.addRow(new String[]{planet.getName(),
                                              String.valueOf(planet.getShips()),
                                              String.valueOf(planet.getProduction()),
                                              String.valueOf(planet.getDeathPercentage()),
                                              planet.getConqueror()}); 
                    GameConfigurationPNamePlanet.setText("");
                    GameConfigurationPProduction.setText("");
                    GameConfigurationPShips.setText("");
                    GameConfigurationPDeathless.setText("");
                    GameConfigurationPConquers.setSelectedIndex(0);
                }
            }
        }
    }//GEN-LAST:event_AddPlanetButtonActionPerformed

    private void PersonalizedPlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PersonalizedPlayButtonActionPerformed
        gameManager.reset(SpacePanel, Bitacora);
        TurnLabel.setText("1");
        gameManager.doPlayers(GameConfigurationPTablePlayers);
        gameManager.doPlanets(GameConfigurationPTablePlanets, Integer.parseInt(GameConfigurationPRowMap.getText().trim()), Integer.parseInt(GameConfigurationPColumnMap.getText().trim()));
        Map map = new Map(GameConfigurationPNameMap.getText(),
                          GameConfigurationPRowMap.getText().trim(),
                          GameConfigurationPColumnMap.getText().trim(),
                          GameConfigurationPBlindMap,
                          GameConfigurationPAcum,
                          GameConfigurationPFinalization.getText().trim(),
                          GameConfigurationPShowShips,
                          GameConfigurationPShowStadistics);
        if(map.isValid()){
            SpacePanel.setLayout(new GridLayout(map.getFilas(), map.getColumnas()));
            doCells(map, SpacePanel, gameManager.getPlanets());
            SpacePanel.validate();
            SpacePanel.repaint();
            GameConfigurationA.setVisible(false);
            gameManager.getConfiguration().setMap(map);
            gameManager.setAlAzar(true);
        }
    }//GEN-LAST:event_PersonalizedPlayButtonActionPerformed

    private void AtackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtackButtonActionPerformed
        if(gameManager.getState()==0){
            this.StateLabel.setText("Atacando: Seleccionando un planeta de salida.");
            gameManager.setState(1);
            this.AtackButton.setText("Cancelar Ataque");
        }else{
            gameManager.cancelAtack(StateLabel, AtackButton);
        }
    }//GEN-LAST:event_AtackButtonActionPerformed

    private void EndTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndTurnButtonActionPerformed
        gameManager.cambiarJugador(Bitacora, SpacePanel);
        gameManager.cancelAtack(StateLabel, AtackButton);
        TurnLabel.setText(String.valueOf(gameManager.getTurno()));
        NamePlayerInTurn.setText(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getName());
        NamePlayerInTurn.setForeground(Utilities.getColor(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getColorPlayer()));
        StateLabel.setForeground(Utilities.getColor(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getColorPlayer()));
        if(gameManager.isVictoria()){
            uiManager.doResultTable(GameResultTable, gameManager.getPlayers());
            this.AtackButton.setEnabled(false);
            this.EndTurnButton.setEnabled(false);
            GameResults.setVisible(true);
        }
    }//GEN-LAST:event_EndTurnButtonActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        JOptionPane.showMessageDialog(null, "Desarrollador: José Carlos Soberanis Ramírez"
                + "\nCarnet: 201730246"
                + "\nVersion: ", "Información del desarrollador", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        gameManager.setState(2);
        StateLabel.setText(" Midiendo: Seleccionando un planeta de salida.");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void doCells(Map map, JPanel SpacePanel, ArrayList<Planet> planets){
        int iTemp=1;
        NamePlayerInTurn.setText(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getName());
        NamePlayerInTurn.setBackground(Utilities.getColor(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getColorPlayer()));
        for (int i = 0; i < map.getFilas(); i++) {//por cada fila
            for (int j = 0; j < map.getColumnas(); j++) { //por cada columna
                Cell cell = new Cell(i,j);//agregamos una nueva celda
                cell.setSize(SpacePanel.getWidth()/map.getFilas(), SpacePanel.getHeight()/map.getColumnas());
                ImageIcon imagen;
                if(Utilities.planetAt(cell, gameManager.getPlanets())==null){
                    imagen = new ImageIcon(getClass().getResource("/Images/0.jpg"));
                    uiManager.addBorder(cell, new LineBorder(Color.BLACK));
                }else{
                    imagen = new ImageIcon(getClass().getResource("/Images/"+iTemp+".jpg"));
                    iTemp = (iTemp==10)?1:(iTemp+1);
                    if(!Utilities.planetAt(cell, gameManager.getPlanets()).getConqueror().equals("Nadie")){
                        uiManager.addBorder(cell, new LineBorder(Utilities.getColor(Utilities.getPlayer(Utilities.planetAt(cell, gameManager.getPlanets()), gameManager.getPlayers()).getColorPlayer())));
                    }else{
                        uiManager.addBorder(cell, new LineBorder(Color.BLACK));
                    }
                }
                Icon fondo = new ImageIcon(imagen.getImage().getScaledInstance(cell.getWidth(), cell.getHeight(), Image.SCALE_DEFAULT));
                cell.setIcon(fondo);
                SpacePanel.add(cell);
                cell.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        if(Utilities.planetAt(cell, gameManager.getPlanets())!=null){
                            if(gameManager.getConfiguration().getMap().isMapaCiego()){
                                if(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getName().equals(Utilities.planetAt(cell, gameManager.getPlanets()).getConqueror())){
                                    cell.showInfo(evt, Utilities.planetAt(cell, gameManager.getPlanets()));
                                }
                            }else{
                                if(Utilities.planetAt(cell, gameManager.getPlanets()).getConqueror().equals("Nadie")){
                                    if(gameManager.getConfiguration().getMap().getNeutrales().isShowShips()){
                                        if(gameManager.getConfiguration().getMap().getNeutrales().isShowStadistics()){
                                            cell.showInfo(evt, Utilities.planetAt(cell, gameManager.getPlanets()));
                                        }else{
                                            cell.showShips(evt, Utilities.planetAt(cell, gameManager.getPlanets()));
                                        }
                                    }else{
                                        if(gameManager.getConfiguration().getMap().getNeutrales().isShowStadistics()){
                                            cell.showStadistics(evt, Utilities.planetAt(cell, gameManager.getPlanets()));
                                        }else{
                                            cell.showName(evt, Utilities.planetAt(cell, gameManager.getPlanets()));
                                        }
                                    }
                                }else{
                                    cell.showInfo(evt, Utilities.planetAt(cell, gameManager.getPlanets()));
                                }
                            }
                        }
                    }
                    public void mouseExited(java.awt.event.MouseEvent evt){
                        if(Utilities.planetAt(cell, gameManager.getPlanets())!=null)cell.hideInfo(evt);
                    }
                });
                cell.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        if(gameManager.getState()!=0){
                            if(Utilities.planetAt(cell, gameManager.getPlanets())!=null){
                                if(gameManager.getExitCell()==null){
                                    if(gameManager.getState()==1){
                                        if(gameManager.getPlayers().get(gameManager.getJugadorEnTurno()).getName().equals(Utilities.planetAt(cell, gameManager.getPlanets()).getConqueror())){
                                            gameManager.setExitCell(cell);
                                            StateLabel.setText("Atacando: Seleccionando un planeta destino.");
                                        }
                                        
                                    }else{
                                        gameManager.setExitCell(cell);
                                        StateLabel.setText("Midiendo: Seleccionando un planeta destino.");
                                    }
                                }else{
                                    gameManager.setDestinyCell(cell);
                                    if(gameManager.getState()==1)gameManager.confirmAtack(StateLabel, AtackButton, Bitacora);
                                    if(gameManager.getState()==2)gameManager.showDistance(StateLabel, AtackButton);
                                }
                            }
                        }
                    }
                });
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddPlanetButton;
    private javax.swing.JButton AddPlayerAButton;
    private javax.swing.JButton AddPlayerButton;
    private javax.swing.JButton AtackButton;
    private javax.swing.JTextArea Bitacora;
    private javax.swing.JMenuItem BotonJuegoAlAzar;
    private javax.swing.JMenuItem BotonJuegoPersonalizado;
    private javax.swing.JButton EndTurnButton;
    private javax.swing.JDialog GameConfigurationA;
    private javax.swing.JCheckBox GameConfigurationAAcum;
    private javax.swing.JFormattedTextField GameConfigurationAAmount;
    private javax.swing.JCheckBox GameConfigurationABlindMap;
    private javax.swing.JComboBox<String> GameConfigurationAColorPlayer;
    private javax.swing.JFormattedTextField GameConfigurationAColumnMap;
    private javax.swing.JFormattedTextField GameConfigurationAFinalization;
    private javax.swing.JTextField GameConfigurationANameMap;
    private javax.swing.JTextField GameConfigurationANamePlayer;
    private javax.swing.JFormattedTextField GameConfigurationARowMap;
    private javax.swing.JCheckBox GameConfigurationAShowShips;
    private javax.swing.JCheckBox GameConfigurationAShowStadistics;
    private javax.swing.JTable GameConfigurationATablePlayers;
    private javax.swing.JComboBox<String> GameConfigurationATypePlayer;
    private javax.swing.JDialog GameConfigurationP;
    private javax.swing.JCheckBox GameConfigurationPAcum;
    private javax.swing.JCheckBox GameConfigurationPBlindMap;
    private javax.swing.JComboBox<String> GameConfigurationPColorPlayer;
    private javax.swing.JFormattedTextField GameConfigurationPColumnMap;
    private javax.swing.JComboBox<String> GameConfigurationPConquers;
    private javax.swing.JFormattedTextField GameConfigurationPDeathless;
    private javax.swing.JFormattedTextField GameConfigurationPFinalization;
    private javax.swing.JTextField GameConfigurationPNameMap;
    private javax.swing.JTextField GameConfigurationPNamePlanet;
    private javax.swing.JTextField GameConfigurationPNamePlayer;
    private javax.swing.JFormattedTextField GameConfigurationPProduction;
    private javax.swing.JFormattedTextField GameConfigurationPRowMap;
    private javax.swing.JFormattedTextField GameConfigurationPShips;
    private javax.swing.JCheckBox GameConfigurationPShowShips;
    private javax.swing.JCheckBox GameConfigurationPShowStadistics;
    private javax.swing.JTable GameConfigurationPTablePlanets;
    private javax.swing.JTable GameConfigurationPTablePlayers;
    private javax.swing.JComboBox<String> GameConfigurationPTypePlayer;
    private javax.swing.JTable GameResultTable;
    private javax.swing.JDialog GameResults;
    private javax.swing.JPanel InformationPanel;
    private javax.swing.JLabel NamePlayerInTurn;
    private javax.swing.JButton PersonalizedPlayButton;
    private javax.swing.JButton PlayAButton;
    private javax.swing.JPanel SpacePanel;
    private javax.swing.JLabel StateLabel;
    private javax.swing.JLabel TurnLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
